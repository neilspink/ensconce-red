---
  - name: Check For Existance Of {{ user_sshfile }}
    stat:
      path: "{{ user_sshfile }}"
    register: sshkey
    delegate_to: localhost
    become: no
        
  - name: Check For Existance Of {{ user_passfile }} 
    stat:
      path: "{{ user_passfile }}"
    register: passfile
    delegate_to: localhost
    become: no

  - name: Generate User Password File
    shell: python3 ./files/password_hasher.py {{ user_passfile }}
    register: generated_password
    when: not passfile.stat.exists
    delegate_to: localhost
    become: no

  - name: set generated_password {{ generated_password }}
    set_fact:
      secret_password: "{{ generated_password.stdout }}"

  - name: Make SSH Key {{ user_sshfile }}
    command : ssh-keygen -q -b 4096 -f {{ user_sshfile }} -P {{ secret_password }}
    delegate_to: localhost
    become: no
    when: not sshkey.stat.exists

  - name: Create Remote User Account {{ user_username }}
    user: 
      name: "{{ user_username }}" 
      password: "{{ lookup('file', user_passfile) }}" 
      group: "sudo" 
      shell: /bin/bash
    become: yes

  - name: Clean up generated hash which is no longer needed.
    file:
      state: absent
      path: "{{ user_passfile }}"
    delegate_to: localhost
    become: no

  - name: Deploy SSH Key {{ user_sshfile }} For {{ user_username }}
    authorized_key: user="{{ user_username }}"
                    key="{{ lookup('file', user_sshfile + '.pub') }}"
                    state=present
    become: yes
